- hosts: localhost
  gather_facts: true

- hosts: podman_hypervisors
  connection: local
  tasks:

  - name: start temp workspace
    block:
    - name: make temp dir for ignition file building from template
      tempfile:
        state: directory
        prefix: "ansible-ignition-build"
      register: ign_tempdir
  
    - name: create fcos live boot config from template
      template:
        src: "../templates/ignition.fcc.j2"
        dest: "{{ ign_tempdir.path }}/ignition.fcc"
      vars:
        - ip: "{{ hostvars['localhost']['ansible_default_ipv4']['address'] }}"
  
    - name: create fcos net config from template
      template:
        src: "../templates/ignition-net.fcc.j2"
        dest: "{{ ign_tempdir.path }}/ignition-net.fcc"
    
    - name: use fcct to convert boot config to ignition file
      shell: |
        fcct --input {{ ign_tempdir.path }}/ignition.fcc --output {{ ign_tempdir.path }}/ignition.ign
  
    - name: use fcct to convert net config to ignition file
      shell: |
        fcct --input {{ ign_tempdir.path }}/ignition-net.fcc --output {{ ign_tempdir.path }}/ignition-net.ign
  
    - name: create fcos iso with coreos installer
      shell: |
        coreos-installer iso ignition embed {{ fcos_iso_path }} -i {{ ign_tempdir.path }}/ignition.ign -o {{ ign_tempdir.path }}/{{ inventory_hostname }}-coreos.iso
  
    - name: show iso path
      debug:
        msg: "iso path is at {{ ign_tempdir.path }}/{{ inventory_hostname }}-coreos.iso"
  
    - name: "start python simple file server to host install ignition file {{ ign_tempdir.path }}/ignition-net.ign"
      command:
        argv:
          - "python3"
          - "-m"
          - "http.server"
          - "--directory"
          - "{{ ign_tempdir.path }}"
          - "8080"
      async: 1000
      poll: 0
  
    - name: pause until simple http server no longer needed
      pause:
        prompt: "hit enter to kill the simple http server"
  
    - name: kill any simple http server processes
      shell: |
        ps ax | fgrep 'python3 -m http.server' | fgrep -v "grep -F" | awk '{ print $1 }' | xargs kill
    always:
    - name: delete temporary files created in workspace
      file:
        state: absent
        path: "{{ ign_tempdir.path }}"
